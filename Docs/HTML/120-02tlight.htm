<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Example - 02tlight.asm - Traffic Lights</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="000sms32v50.css" rel="stylesheet" type="text/css">
</head>

<body>
<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td><a href="index.htm"><img src="005logo.PNG" alt="Site Logo" width="64" height="63"></a></td>
    <td><h1>Example - 02tlight.asm - Traffic Lights</h1>
      <p><a href="http://www.softwareforeducation.com/" target="_blank">Website</a></p></td>
  </tr>
</table>
<p><a href="index.htm">Home</a> | <a href="110-99nasty.htm">Previous</a> | <a href="130-03move.htm">Next</a></p>
<h3>Example - 02tlight.asm</h3>
<table border="1" cellspacing="0" cellpadding="5">
<tr>
<td bgcolor="#ccddee">
<pre>

; ===== CONTROL THE TRAFFIC LIGHTS =============================

	CLO		; Close unwanted windows.
Start:
			; Turn off all the traffic lights.
	MOV AL,0	; Copy 00000000 into the AL register.
	OUT 01		; Send AL to Port One (The traffic lights).
			; Turn on all the traffic lights.
	MOV AL,FC	; Copy 11111100 into the AL register.
	OUT 01		; Send AL to Port One (The traffic lights).
	JMP Start	; Jump back to the start.
	END		; Program ends.
	
; ===== Program Ends ==========================================

	YOUR TASK
	=========
	Use the help page on Hexadecimal and ASCII codes.
	Work out what hexadecimal numbers will activate the
	correct traffic lights. Modify the program to step
	the lights through a realistic sequence.
</pre>
</td>
</tr>
</table>
<h3>&nbsp;</h3>
<p>To run the program press the Step button repeatedly or press the Run button. 
</p>
<p>To stop the program, press Stop. When the program is running, click the RAM-Source 
  or RAM-Hex or RAM-ASCII tabs. These give alternative views of the contents of 
  random access memory (RAM). </p>
<p>Also click the List File tab to see the machine code generated by the simulator 
  and the addresses where the codes are stored.</p>
<p></p>
<h3>Ports</h3>
<p>The traffic lights are connected to port one. Imagine this as a socket on the 
  back of the processor box. Data sent to port one goes to the traffic lights 
  and controls them.</p>
<p>There are six lamps to control. Red, Amber and Green for a pair of lights. 
  This can be achieved with a single byte of data where two bits are unused.</p>
<p>By setting the correct bits to One, the correct lamps come on.</p>
<table border="1" cellspacing="0" cellpadding="5">
  <tr>
    <td><img src="120-02tlight.PNG" alt="Traffic Lights Image" width="208" height="230"></td>
    <td valign="top">
<p>Fill in the rest of this table to work out the Hexadecimal values you need. 
        Of course you need to know the sequence of lights in your country.</p>
	    <table border="1" cellspacing="0" cellpadding="2">
        <tr> 
          <td><div align="center"><strong>Red</strong></div></td>
          <td><div align="center"><strong>Amber</strong></div></td>
          <td><div align="center"><strong>Green</strong></div></td>
          <td><div align="center"><strong>Red</strong></div></td>
          <td><div align="center"><strong>Amber</strong></div></td>
          <td><div align="center"><strong>Green</strong></div></td>
          <td><div align="center"><strong>Unused</strong></div></td>
          <td><div align="center"><strong>Unused</strong></div></td>
          <td><div align="center"><strong>Hexadecimal</strong></div></td>
        </tr>
        <tr> 
          <td><div align="center">1</div></td>
          <td><div align="center">0</div></td>
          <td><div align="center">0</div></td>
          <td><div align="center">0</div></td>
          <td><div align="center">0</div></td>
          <td><div align="center">1</div></td>
          <td><div align="center">0</div></td>
          <td><div align="center">0</div></td>
          <td><div align="center">84</div></td>
        </tr>
        <tr> 
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
        <tr> 
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
        <tr>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
      </table></td>
  </tr>
</table>
<h3>&nbsp; </h3>
<h3>What you need to know</h3>
<table border="1" cellspacing="0" cellpadding="5">
  <tr> 
    <td><h4>Labels and Jumps</h4></td>
    <td><p>Labels mark positions that are used by Jump commands. All the commands 
        in this program are repeated for ever or until Stop is pressed. Label 
        names must start with a letter or _ character. Label names must not start 
        with a digit. The line </p>
      <p><br>
        JMP Start</p>
      <p>causes the program to jump back and re-do the earlier commands.</p>
      <p>Destination labels end in a colon. For example </p>
      <p><br>
        Start:</p>
</td>
  </tr>
  <tr>
    <td><h4>Controlling the Lights</h4></td>
    <td><p>If you look carefully at the traffic lights display, you can see which 
        bit controls each light bulb. Work out the pattern of noughts and ones 
        needed to turn on a sensible set of bulbs. Use the Hexadecimal and Binary 
        numbers table to work out the hexadecimal equivalent. Move this hexadecimal 
        number into AL.</p>
      <p><br>
        OUT 01 </p>
      <p>This command copies the contents of the AL register to Output Port One. 
        The traffic lights are connected to port one. A binary one causes a bulb 
        to switch on. A nought causes it to turn off.</p>
</td>
  </tr>
</table>
<p><a href="index.htm">Home</a> | <a href="110-99nasty.htm">Previous</a> | <a href="130-03move.htm">Next</a></p>
<p>&copy; C Neil Bauers 2003</p>
</body>
</html>
